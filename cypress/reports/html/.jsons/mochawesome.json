{
  "stats": {
    "suites": 1,
    "tests": 78,
    "passes": 78,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-23T05:48:52.204Z",
    "end": "2024-02-23T05:49:33.636Z",
    "duration": 41432,
    "testsRegistered": 78,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c269ad50-6f2a-4760-9054-959bc4e8b2bc",
      "title": "",
      "fullFile": "cypress\\integration\\api\\tests\\CatalogPageTest.js",
      "file": "cypress\\integration\\api\\tests\\CatalogPageTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
          "title": "Catalog Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add Catalog Feature Flow",
              "fullTitle": "Catalog Page Add Catalog Feature Flow",
              "timedOut": null,
              "duration": 7982,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _loginPage.doLogin)().then(response => {\n  authKey = response.body.key;\n  (0, _DashboardPage.doCteareApp)(authKey, app_name).then(response => {\n    cy.log(\"login response\", response.body);\n    expect(response.body.name, \"App name is not matching\").to.eq(app_name);\n    app_id = response.body.id;\n    app_name = response.body.name;\n    feature_title = \"TestTitle\" + app_id;\n    feature_slug = \"TestSlug\" + app_id;\n    feature_description = \"TestDescription\" + app_id;\n    localStorage.setItem('app_id', response.body.id);\n    (0, _CatalogPage.doAddCatalogFeature)(authKey, feature_title, feature_slug, feature_description).then(response => {\n      feature_id = response.body.id;\n      expect(response.status).to.eq(201);\n      cy.log(\"Add Catalog Feature response\", response.body);\n    });\n  });\n});",
              "err": {},
              "uuid": "a10457b2-8ad9-41fe-be99-649f359500ce",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catolog Feature Flow",
              "fullTitle": "Catalog Page Get Catolog Feature Flow",
              "timedOut": null,
              "duration": 655,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatologFeature)(authKey, feature_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catolog Feature response\", response.body);\n});",
              "err": {},
              "uuid": "48bbf2bf-7479-40cc-8573-5e3291dc8dbe",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catolog Category List Flow",
              "fullTitle": "Catalog Page Get Catolog Category List Flow",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatologCategoryList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catolog Category response\", response.body);\n});",
              "err": {},
              "uuid": "90770257-74ce-49cb-9fac-ea05f664fede",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Catalog Category Flow",
              "fullTitle": "Catalog Page Add Catalog Category Flow",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "category_title = \"TestTitle\" + app_id;\n(0, _CatalogPage.doAddCatalogCategory)(authKey, category_title).then(response => {\n  category_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Add Catalog Category response\", response.body);\n});",
              "err": {},
              "uuid": "bdc78ff7-c8f1-4e29-9495-5f6fa4c6b5ac",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Category Using Id Flow",
              "fullTitle": "Catalog Page Get Catalog Category Using Id Flow",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogCategoryById)(authKey, category_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"GEt Catalog Category Using Id response\", response.body);\n});",
              "err": {},
              "uuid": "834264dc-b8cc-439a-8df2-26d6712a35d7",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update With Put Catalog Category Using Id Flow",
              "fullTitle": "Catalog Page Update With Put Catalog Category Using Id Flow",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "category_title = \"TestTitle\" + app_id;\n(0, _CatalogPage.doUpdateWithPutCatalogCategory)(authKey, category_id, category_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Update with put Catalog Category response\", response.body);\n});",
              "err": {},
              "uuid": "f6977557-4f90-46bd-b9a3-4234ceb7a1c9",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update With Patch Catalog Category Using Id Flow",
              "fullTitle": "Catalog Page Update With Patch Catalog Category Using Id Flow",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "category_title = \"TestTitle\" + app_id;\n(0, _CatalogPage.doUpdateWithPatchCatalogCategory)(authKey, category_id, category_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Update with Patch Catalog Category response\", response.body);\n});",
              "err": {},
              "uuid": "28f5e9e8-35da-4e7d-8342-046936f0977f",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Category  Flow",
              "fullTitle": "Catalog Page Delete Catalog Category  Flow",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogCategory)(authKey, category_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"GEt Catalog Category Using Id response\", response.body);\n});",
              "err": {},
              "uuid": "7a561c75-f44f-4904-ad76-06d37f65038e",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catolog Module List Flow",
              "fullTitle": "Catalog Page Get Catolog Module List Flow",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatologModuleList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catolog Module List\", response.body);\n});",
              "err": {},
              "uuid": "d49d8cc0-0e42-4fb7-aa23-8df7ef323794",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Catalog Module",
              "fullTitle": "Catalog Page Add Catalog Module",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "module_title = '_IunN' + (Math.random() + 1).toString(36).substring(7);\nmodule_slug = \"TestModuleSlug\" + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doAddCatalogModule)(authKey, module_title, module_slug).then(response => {\n  module_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"create userroles response\", response.body);\n});",
              "err": {},
              "uuid": "c284ff3e-4f36-4317-b6fe-ba154af9bb14",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catolog Module By Id Flow",
              "fullTitle": "Catalog Page Get Catolog Module By Id Flow",
              "timedOut": null,
              "duration": 1049,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatologModuleById)(authKey, module_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catolog Module By Id\", response.body);\n});",
              "err": {},
              "uuid": "6736b440-15a2-427e-95be-c71ee031040d",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Module Using Put Method Flow",
              "fullTitle": "Catalog Page Update Catalog Module Using Put Method Flow",
              "timedOut": null,
              "duration": 432,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "module_title = '_IunNPut' + (Math.random() + 1).toString(36).substring(7);\nmodule_slug = \"TestModuleSlugPut\" + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatologModule)(authKey, module_id, module_slug, module_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"'Update Catalog Module Using Put Method \", response.body);\n});",
              "err": {},
              "uuid": "88623929-b515-44e0-8879-04ab899964a3",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Module Using Patch Method Flow",
              "fullTitle": "Catalog Page Update Catalog Module Using Patch Method Flow",
              "timedOut": null,
              "duration": 415,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "module_title = '_IunNPatch' + (Math.random() + 1).toString(36).substring(7);\nmodule_slug = \"TestModuleSlugPatch\" + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatologModule)(authKey, module_id, module_slug, module_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"'Update Catalog Module Using Put Method \", response.body);\n});",
              "err": {},
              "uuid": "5bbaebd6-3e2c-4d76-93c2-48db2333bf69",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Module Flow",
              "fullTitle": "Catalog Page Delete Catalog Module Flow",
              "timedOut": null,
              "duration": 619,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatologModule)(authKey, module_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Delete Catalog Module \", response.body);\n});",
              "err": {},
              "uuid": "81a53aa5-7a24-446a-939c-20391d776afc",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Import Feature Flow",
              "fullTitle": "Catalog Page Import Feature Flow",
              "timedOut": null,
              "duration": 691,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doImportFeature)(authKey, app_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Import Feature response\", response.body);\n});",
              "err": {},
              "uuid": "53a4334f-2551-47c4-8e29-cd8baed5a292",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Archetype Flow",
              "fullTitle": "Catalog Page Get Archetype Flow",
              "timedOut": null,
              "duration": 1091,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogArchetypeList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Archetype response\", response.body);\n});",
              "err": {},
              "uuid": "40795770-5762-41c8-ad50-cec359b36b0c",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog Archtype Flow",
              "fullTitle": "Catalog Page Create Catalog Archtype Flow",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "archetype_slug = '_IunN' + (Math.random() + 1).toString(36).substring(7);\narchetype_title = 'MyTitle' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogArchetype)(authKey, archetype_slug, archetype_title).then(response => {\n  archtype_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Create Catalog Archtype response\", response.body);\n});",
              "err": {},
              "uuid": "e2a1e380-de05-4347-b5bd-f10df871d717",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Archtype Using Id Flow",
              "fullTitle": "Catalog Page Get Catalog Archtype Using Id Flow",
              "timedOut": null,
              "duration": 381,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogArchetypeById)(authKey, archtype_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Archtype Using Id response\", response.body);\n});",
              "err": {},
              "uuid": "38afa34a-7a64-4c1c-9262-016729adea35",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Archtype Using Put Method Flow",
              "fullTitle": "Catalog Page Update Catalog Archtype Using Put Method Flow",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "archetype_slug = '_IunNPUT' + (Math.random() + 1).toString(36).substring(7);\narchetype_title = 'MyTitlePut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogArchetype)(authKey, archtype_id, archetype_slug, archetype_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Update Catalog Archtype Using Put Method response\", response.body);\n});",
              "err": {},
              "uuid": "d86ef4b4-05fb-47ea-bff2-41f30198a96e",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Archtype Using Patch Method Flow",
              "fullTitle": "Catalog Page Update Catalog Archtype Using Patch Method Flow",
              "timedOut": null,
              "duration": 417,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "archetype_slug = '_IunNPATCH' + (Math.random() + 1).toString(36).substring(7);\narchetype_title = 'MyTitlePatch' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogArchetype)(authKey, archtype_id, archetype_slug, archetype_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Update Catalog Archtype Using Patch Method response\", response.body);\n});",
              "err": {},
              "uuid": "8a04089b-70b2-421c-a65a-a5e1c920bb47",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Archtype Flow",
              "fullTitle": "Catalog Page Delete Catalog Archtype Flow",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogArchetype)(authKey, archtype_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Delete Catalog Archtype response\", response.body);\n});",
              "err": {},
              "uuid": "c10b2597-8606-421b-bd44-0d471d881135",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Asset List Flow",
              "fullTitle": "Catalog Page Get Catalog Asset List Flow",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogAssetList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Asset Listresponse\", response.body);\n});",
              "err": {},
              "uuid": "ecbd05f6-4538-4d5a-b984-e5bb34c364a6",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog Asset Flow",
              "fullTitle": "Catalog Page Create Catalog Asset Flow",
              "timedOut": null,
              "duration": 389,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doAddCatalogAsset)(authKey).then(response => {\n  asset_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Create Catalog Asset response\", response.body);\n});",
              "err": {},
              "uuid": "7f1db61b-8f78-415c-bc69-a4ea912e6890",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Asset Using Id Flow",
              "fullTitle": "Catalog Page Get Catalog Asset Using Id Flow",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogAssetUsingId)(authKey, asset_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Asset Using Id response\", response.body);\n});",
              "err": {},
              "uuid": "3a5e5f5a-1c5b-4eef-8a70-cb0ac6113726",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Asset Using Put Method Flow",
              "fullTitle": "Catalog Page Update Catalog Asset Using Put Method Flow",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doUpdateWithPutCatalogAsset)(authKey, asset_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Update Catalog Asset Using Put Method response\", response.body);\n});",
              "err": {},
              "uuid": "a00067b5-789e-4310-b8ba-60b80798f807",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Asset Using Patch Method Flow",
              "fullTitle": "Catalog Page Update Catalog Asset Using Patch Method Flow",
              "timedOut": null,
              "duration": 399,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doUpdateWithPatchCatalogAsset)(authKey, asset_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Update Catalog Asset Using Patch Method response\", response.body);\n});",
              "err": {},
              "uuid": "c0b3654c-a482-47f1-b79d-f1ac6579ef5d",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Asset Flow",
              "fullTitle": "Catalog Page Delete Catalog Asset Flow",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogAsset)(authKey, asset_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Delete Catalog Asset response\", response.body);\n});",
              "err": {},
              "uuid": "49ec442c-a090-4367-aa3a-d7f24c42918a",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog Code Module Flow",
              "fullTitle": "Catalog Page Create Catalog Code Module Flow",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "slug = 'Mymoduleslug' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogCodeModule)(authKey, slug).then(response => {\n  module_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Catalog Code Module response\", response.body);\n});",
              "err": {},
              "uuid": "faae156b-aec8-4e60-b96f-e8e0dba8dab3",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Code Module Using Id Flow",
              "fullTitle": "Catalog Page Get Catalog Code Module Using Id Flow",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogCodeModuleById)(authKey, module_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Catalog Code Module response\", response.body);\n});",
              "err": {},
              "uuid": "d9607720-edbf-4c01-a4c5-cce0bd32d572",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update with Put Catalog Code Module Flow",
              "fullTitle": "Catalog Page Update with Put Catalog Code Module Flow",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "slug = 'MymoduleslugWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogCodeModule)(authKey, module_id, slug).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Catalog Code Module response\", response.body);\n});",
              "err": {},
              "uuid": "6a1b2592-78d0-4ad3-bd7a-42c264987c8b",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update with Patch Catalog Code Module Flow",
              "fullTitle": "Catalog Page Update with Patch Catalog Code Module Flow",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "slug = 'MymoduleslugWithPatch' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogCodeModule)(authKey, module_id, slug).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Catalog Code Module response\", response.body);\n});",
              "err": {},
              "uuid": "19afa8b1-385c-4eca-9c4c-50e5f5f0f54c",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Code Module Flow",
              "fullTitle": "Catalog Page Delete Catalog Code Module Flow",
              "timedOut": null,
              "duration": 335,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogCodeModule)(authKey, module_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Catalog Code Module response\", response.body);\n});",
              "err": {},
              "uuid": "305a55dd-d546-48cd-9615-d89eb5cb08ca",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Embedding Search Flow",
              "fullTitle": "Catalog Page Get Embedding Search Flow",
              "timedOut": null,
              "duration": 876,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetEmbeddingSearch)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "a8f31344-b122-46f4-aace-a58d65a301c3",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Platform List Flow",
              "fullTitle": "Catalog Page Get Catalog Platform List Flow",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogPlatformList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Platform List Response\", response.body);\n});",
              "err": {},
              "uuid": "78ef7a92-b09d-42b1-9679-78997e220f6d",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Catalog Platform Flow",
              "fullTitle": "Catalog Page Add Catalog Platform Flow",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "platform_slug = 'TestPlatformSlug' + (Math.random() + 1).toString(36).substring(7);\nplatform_title = 'My Platform title' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doAddCatalogPlatform)(authKey, platform_slug, platform_title).then(response => {\n  expect(response.status).to.eq(201);\n  platform_id = response.body.id;\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "03982b3f-1e79-44ea-8232-e6155ce2519b",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Platform Using Id",
              "fullTitle": "Catalog Page Get Catalog Platform Using Id",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogPlatformById)(authKey, platform_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "bf5dbd79-05ac-44c9-99bb-c3f9537f5647",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Platform using put method Flow",
              "fullTitle": "Catalog Page Update Catalog Platform using put method Flow",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "platform_slug = 'UpdateWithPutPlatformSlug' + (Math.random() + 1).toString(36).substring(7);\nplatform_title = 'UpdateWithPut My Platform title' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogPlatform)(authKey, platform_id, platform_slug, platform_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "fcabc76f-570f-494f-b8ac-cc06a950c36f",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog Platform using patch method Flow",
              "fullTitle": "Catalog Page Update Catalog Platform using patch method Flow",
              "timedOut": null,
              "duration": 860,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "platform_slug = 'UpdateWithPatchPlatformSlug' + (Math.random() + 1).toString(36).substring(7);\nplatform_title = 'UpdateWithPatch My Platform title' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogPlatform)(authKey, platform_id, platform_slug, platform_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "abf1f4a1-1381-41b2-a81a-7ced811fb45c",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Platform Flow",
              "fullTitle": "Catalog Page Delete Catalog Platform Flow",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogPlatform)(authKey, platform_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "123deb4c-4a8c-465b-bbee-fe72382a9776",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Resource List Flow",
              "fullTitle": "Catalog Page Get Catalog Resource List Flow",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogResourceList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "b9a26457-d9f9-4803-8b25-3fe955e2300a",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog Resource Flow",
              "fullTitle": "Catalog Page Create Catalog Resource Flow",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "resource_description = 'MyResourceDescription' + (Math.random() + 1).toString(36).substring(7);\nresource_title = 'MyResourceTitle' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogResource)(authKey, resource_title, resource_description).then(response => {\n  resource_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "af19b4b2-db09-4d2e-b3d4-c5396fdebaed",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Resource Using Id",
              "fullTitle": "Catalog Page Get Catalog Resource Using Id",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogResourceById)(authKey, resource_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "19d12db8-2914-41a5-9e62-a0284c9d167d",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Resource with Put Method Flow",
              "fullTitle": "Catalog Page Update catalog Resource with Put Method Flow",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "resource_description = 'MyResourceDescriptionWithPut' + (Math.random() + 1).toString(36).substring(7);\nresource_title = 'MyResourceTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogResource)(authKey, resource_id, resource_title, resource_description).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "3eab83da-4fe8-4602-967c-821beb69ebe8",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Resource with Patch Method Flow",
              "fullTitle": "Catalog Page Update catalog Resource with Patch Method Flow",
              "timedOut": null,
              "duration": 396,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "resource_description = 'MyResourceDescriptionWithPatch' + (Math.random() + 1).toString(36).substring(7);\nresource_title = 'MyResourceTitleWithPatch' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogResource)(authKey, resource_id, resource_title, resource_description).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "f5bfad95-2343-4e5d-9d09-25d62868a3be",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Resource Flow",
              "fullTitle": "Catalog Page Delete Catalog Resource Flow",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogResource)(authKey, resource_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "27e53c1b-db78-4118-b073-e321d697b4e0",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Sector List Flow",
              "fullTitle": "Catalog Page Get Catalog Sector List Flow",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogSectorList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Sector response\", response.body);\n});",
              "err": {},
              "uuid": "5b3cd66f-ed91-4625-8d79-b13d49314236",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog Sector Flow",
              "fullTitle": "Catalog Page Create Catalog Sector Flow",
              "timedOut": null,
              "duration": 376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sector_title = 'MySectorTitle' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogSector)(authKey, sector_title).then(response => {\n  sector_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "25255cd2-338c-4d1e-93ae-a390aff60a5c",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Sector By Id Flow",
              "fullTitle": "Catalog Page Get Catalog Sector By Id Flow",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogSectorById)(authKey, sector_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "982e83ff-1c21-4666-90e6-7c4e1d50c824",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Sector with Put Method Flow",
              "fullTitle": "Catalog Page Update catalog Sector with Put Method Flow",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sector_title = 'MySectorTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogSector)(authKey, sector_id, sector_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "cf392b0b-1871-4c41-9e48-2dcd8fa144ed",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Sector with Patch Method Flow",
              "fullTitle": "Catalog Page Update catalog Sector with Patch Method Flow",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sector_title = 'MySectorTitleWithPatch' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogSector)(authKey, sector_id, sector_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "920436b5-4c91-4ea4-93a4-5ad7741ddad7",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Sector Flow",
              "fullTitle": "Catalog Page Delete Catalog Sector Flow",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogSector)(authKey, sector_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "3eb0a150-30e0-4bb0-b583-c8b78a72b641",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Task List Flow",
              "fullTitle": "Catalog Page Get Catalog Task List Flow",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogTaskList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Task List\", response.body);\n});",
              "err": {},
              "uuid": "dcc71c30-fee4-4bbd-9041-2d3ba2d28652",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog Task Flow",
              "fullTitle": "Catalog Page Create Catalog Task Flow",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "task_title = 'MyTaskTitle' + (Math.random() + 1).toString(36).substring(7);\ntask_description = 'MyTaskDescription' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogTask)(authKey, task_title, task_description).then(response => {\n  task_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "97ec8abe-c59c-4af3-a1cf-a88732701e17",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Task By Id Flow",
              "fullTitle": "Catalog Page Get Catalog Task By Id Flow",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogTaskById)(authKey, task_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "29f2fab8-d901-42b8-8b72-536870e81869",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Task with Put Method Flow",
              "fullTitle": "Catalog Page Update catalog Task with Put Method Flow",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "task_title = 'MyTaskTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\ntask_description = 'MyTaskDescriptionWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogTask)(authKey, task_id, task_title, task_description).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "ea3341d2-2b9f-43aa-a1d4-b8fb757e2fd5",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Task with Patch Method Flow",
              "fullTitle": "Catalog Page Update catalog Task with Patch Method Flow",
              "timedOut": null,
              "duration": 396,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "task_title = 'MyTaskTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\ntask_description = 'MyTaskDescriptionWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogTask)(authKey, task_id, task_title, task_description).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "b4020a61-55c2-49f6-906d-75187085b89a",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Task Flow",
              "fullTitle": "Catalog Page Delete Catalog Task Flow",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogTask)(authKey, task_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "cf2147bf-201c-4ce7-8d92-ed9e802d2732",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Feature Type List Flow",
              "fullTitle": "Catalog Page Get Catalog Feature Type List Flow",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogFeatureTypeList)(authKey, feature_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Feature Type List Flow\", response.body);\n});",
              "err": {},
              "uuid": "ae44565c-2985-4ac9-8618-e9c35d3ae1bf",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog FeatureType Flow",
              "fullTitle": "Catalog Page Create Catalog FeatureType Flow",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "feature_title = 'MyTaskTitle' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogFeatureType)(authKey, feature_title).then(response => {\n  feature_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "79837199-d94c-4cd0-98d6-63e3efb67e49",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Feature Type By Id Flow",
              "fullTitle": "Catalog Page Get Catalog Feature Type By Id Flow",
              "timedOut": null,
              "duration": 353,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogFeatureTypeById)(authKey, feature_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "acbc1aa3-c3eb-462a-a665-fd6bbcc18d31",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Feature Type with Put Method Flow",
              "fullTitle": "Catalog Page Update catalog Feature Type with Put Method Flow",
              "timedOut": null,
              "duration": 378,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "feature_title = 'MyFeatureTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogFeatureType)(authKey, feature_id, feature_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "88c39555-2dbf-4c70-aec7-1360f8c2d1e8",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Feature Type with Patch Method Flow",
              "fullTitle": "Catalog Page Update catalog Feature Type with Patch Method Flow",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "feature_title = 'MyFeatureTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogFeatureType)(authKey, feature_id, feature_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "6fd26b1a-6d0c-4b72-8f41-8ec8e19b104d",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Feature Type Flow",
              "fullTitle": "Catalog Page Delete Catalog Feature Type Flow",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogFeatureType)(authKey, feature_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "d9e0152f-a94c-4fce-8ba0-d8bfacafe138",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Module Type List Flow",
              "fullTitle": "Catalog Page Get Catalog Module Type List Flow",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogModuleTypeList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Module Type List\", response.body);\n});",
              "err": {},
              "uuid": "4853c511-7f54-46bc-b2e1-3293c1fe46ce",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog ModuleType Flow",
              "fullTitle": "Catalog Page Create Catalog ModuleType Flow",
              "timedOut": null,
              "duration": 381,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "module_title = 'MyModuleTitle' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogModuleType)(authKey, module_title).then(response => {\n  module_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "6450764d-ebeb-46ff-bd85-82db7845dc0a",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Module Type By Id Flow",
              "fullTitle": "Catalog Page Get Catalog Module Type By Id Flow",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogModuleTypeById)(authKey, module_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "5556d5eb-2c10-4066-95f8-446ca61a5f15",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Module Type with Put Method Flow",
              "fullTitle": "Catalog Page Update catalog Module Type with Put Method Flow",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "module_title = 'MyModuleTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogModuleType)(authKey, module_id, module_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "200b5d5e-c08d-40d4-891e-eb4e978d9912",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update catalog Module Type with Patch Method Flow",
              "fullTitle": "Catalog Page Update catalog Module Type with Patch Method Flow",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "module_title = 'MyModuleTitleWithPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogModuleType)(authKey, module_id, module_title).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "945e4775-7222-463e-9fb1-f36f516b41eb",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Module Type Flow",
              "fullTitle": "Catalog Page Delete Catalog Module Type Flow",
              "timedOut": null,
              "duration": 349,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogModuleType)(authKey, module_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "a0198080-5217-4023-ad58-e6acfc164c57",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Catalog Base Type List Flow",
              "fullTitle": "Catalog Page Get Catalog Base Type List Flow",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetCatalogBaseArchetypeList)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Catalog Base Type List response\", response.body);\n});",
              "err": {},
              "uuid": "229319ca-7825-484f-ba5f-647d096ef262",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Catalog BaseType Flow",
              "fullTitle": "Catalog Page Create Catalog BaseType Flow",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "base_title = 'MyBaseTitle' + (Math.random() + 1).toString(36).substring(7);\nbase_description = 'MyBasedescription' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doCreateCatalogBaseArchetype)(authKey, base_title, base_description).then(response => {\n  base_id = response.body.id;\n  expect(response.status).to.eq(201);\n  cy.log(\"Create Catalog BaseType response\", response.body);\n});",
              "err": {},
              "uuid": "701af9e1-678e-4898-96d7-1c4d02500771",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog BaseType Using Put Method Flow",
              "fullTitle": "Catalog Page Update Catalog BaseType Using Put Method Flow",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "base_title = 'MyBaseTitlePut' + (Math.random() + 1).toString(36).substring(7);\nbase_description = 'MyBasedescriptionPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPutCatalogBaseArchetype)(authKey, base_id, base_title, base_description).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Create Catalog BaseType response\", response.body);\n});",
              "err": {},
              "uuid": "fcf3bbf9-a016-4854-9236-e9a9adad0769",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Catalog BaseType Using Patch Method Flow",
              "fullTitle": "Catalog Page Update Catalog BaseType Using Patch Method Flow",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "base_title = 'MyBaseTitlePut' + (Math.random() + 1).toString(36).substring(7);\nbase_description = 'MyBasedescriptionPut' + (Math.random() + 1).toString(36).substring(7);\n(0, _CatalogPage.doUpdateWithPatchCatalogBaseArchetype)(authKey, base_id, base_title, base_description).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Create Catalog BaseType response\", response.body);\n});",
              "err": {},
              "uuid": "d5a82203-8749-4f86-a7f0-54a784c45383",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Catalog Base Type Flow",
              "fullTitle": "Catalog Page Delete Catalog Base Type Flow",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doDeleteCatalogBaseType)(authKey, base_id).then(response => {\n  expect(response.status).to.eq(204);\n  cy.log(\"Delete Catalog Base Type response\", response.body);\n});",
              "err": {},
              "uuid": "01d4a2a2-14d5-4835-9fff-66f1d2f7deb1",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Settings FE List",
              "fullTitle": "Catalog Page Get Settings FE List",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetSettingsFElist)(authKey).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Embedding Search response\", response.body);\n});",
              "err": {},
              "uuid": "a0681e3f-be43-433d-ad79-e91273fd1c2f",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Shareable Components  Flow",
              "fullTitle": "Catalog Page Create Shareable Components  Flow",
              "timedOut": null,
              "duration": 397,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doCreateShareableComponent)(authKey).then(response => {\n  expect(response.status).to.eq(201);\n  shareableComponent_id = response.body.id;\n  cy.log(\"Create Shareable Components response\", response.body);\n});",
              "err": {},
              "uuid": "a6caa1c9-4243-4ee7-bf6b-f8d79df75412",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Shareable Components Using Id Flow",
              "fullTitle": "Catalog Page Get Shareable Components Using Id Flow",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doGetShareableComponentsById)(authKey, shareableComponent_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Get Shareable Components Using Id response\", response.body);\n});",
              "err": {},
              "uuid": "e2f166c6-958f-4a43-a707-bebacae85986",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Patch Shareable Components Using Id Flow",
              "fullTitle": "Catalog Page Patch Shareable Components Using Id Flow",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _CatalogPage.doPatchShareableComponent)(authKey, shareableComponent_id).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(\"Patch Shareable Components  response\", response.body);\n});",
              "err": {},
              "uuid": "1fccd293-f182-462a-b12c-2cfa42b0a3bb",
              "parentUUID": "1a414c7e-a7ae-43b7-b785-e3e734d8c924",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a10457b2-8ad9-41fe-be99-649f359500ce",
            "48bbf2bf-7479-40cc-8573-5e3291dc8dbe",
            "90770257-74ce-49cb-9fac-ea05f664fede",
            "bdc78ff7-c8f1-4e29-9495-5f6fa4c6b5ac",
            "834264dc-b8cc-439a-8df2-26d6712a35d7",
            "f6977557-4f90-46bd-b9a3-4234ceb7a1c9",
            "28f5e9e8-35da-4e7d-8342-046936f0977f",
            "7a561c75-f44f-4904-ad76-06d37f65038e",
            "d49d8cc0-0e42-4fb7-aa23-8df7ef323794",
            "c284ff3e-4f36-4317-b6fe-ba154af9bb14",
            "6736b440-15a2-427e-95be-c71ee031040d",
            "88623929-b515-44e0-8879-04ab899964a3",
            "5bbaebd6-3e2c-4d76-93c2-48db2333bf69",
            "81a53aa5-7a24-446a-939c-20391d776afc",
            "53a4334f-2551-47c4-8e29-cd8baed5a292",
            "40795770-5762-41c8-ad50-cec359b36b0c",
            "e2a1e380-de05-4347-b5bd-f10df871d717",
            "38afa34a-7a64-4c1c-9262-016729adea35",
            "d86ef4b4-05fb-47ea-bff2-41f30198a96e",
            "8a04089b-70b2-421c-a65a-a5e1c920bb47",
            "c10b2597-8606-421b-bd44-0d471d881135",
            "ecbd05f6-4538-4d5a-b984-e5bb34c364a6",
            "7f1db61b-8f78-415c-bc69-a4ea912e6890",
            "3a5e5f5a-1c5b-4eef-8a70-cb0ac6113726",
            "a00067b5-789e-4310-b8ba-60b80798f807",
            "c0b3654c-a482-47f1-b79d-f1ac6579ef5d",
            "49ec442c-a090-4367-aa3a-d7f24c42918a",
            "faae156b-aec8-4e60-b96f-e8e0dba8dab3",
            "d9607720-edbf-4c01-a4c5-cce0bd32d572",
            "6a1b2592-78d0-4ad3-bd7a-42c264987c8b",
            "19afa8b1-385c-4eca-9c4c-50e5f5f0f54c",
            "305a55dd-d546-48cd-9615-d89eb5cb08ca",
            "a8f31344-b122-46f4-aace-a58d65a301c3",
            "78ef7a92-b09d-42b1-9679-78997e220f6d",
            "03982b3f-1e79-44ea-8232-e6155ce2519b",
            "bf5dbd79-05ac-44c9-99bb-c3f9537f5647",
            "fcabc76f-570f-494f-b8ac-cc06a950c36f",
            "abf1f4a1-1381-41b2-a81a-7ced811fb45c",
            "123deb4c-4a8c-465b-bbee-fe72382a9776",
            "b9a26457-d9f9-4803-8b25-3fe955e2300a",
            "af19b4b2-db09-4d2e-b3d4-c5396fdebaed",
            "19d12db8-2914-41a5-9e62-a0284c9d167d",
            "3eab83da-4fe8-4602-967c-821beb69ebe8",
            "f5bfad95-2343-4e5d-9d09-25d62868a3be",
            "27e53c1b-db78-4118-b073-e321d697b4e0",
            "5b3cd66f-ed91-4625-8d79-b13d49314236",
            "25255cd2-338c-4d1e-93ae-a390aff60a5c",
            "982e83ff-1c21-4666-90e6-7c4e1d50c824",
            "cf392b0b-1871-4c41-9e48-2dcd8fa144ed",
            "920436b5-4c91-4ea4-93a4-5ad7741ddad7",
            "3eb0a150-30e0-4bb0-b583-c8b78a72b641",
            "dcc71c30-fee4-4bbd-9041-2d3ba2d28652",
            "97ec8abe-c59c-4af3-a1cf-a88732701e17",
            "29f2fab8-d901-42b8-8b72-536870e81869",
            "ea3341d2-2b9f-43aa-a1d4-b8fb757e2fd5",
            "b4020a61-55c2-49f6-906d-75187085b89a",
            "cf2147bf-201c-4ce7-8d92-ed9e802d2732",
            "ae44565c-2985-4ac9-8618-e9c35d3ae1bf",
            "79837199-d94c-4cd0-98d6-63e3efb67e49",
            "acbc1aa3-c3eb-462a-a665-fd6bbcc18d31",
            "88c39555-2dbf-4c70-aec7-1360f8c2d1e8",
            "6fd26b1a-6d0c-4b72-8f41-8ec8e19b104d",
            "d9e0152f-a94c-4fce-8ba0-d8bfacafe138",
            "4853c511-7f54-46bc-b2e1-3293c1fe46ce",
            "6450764d-ebeb-46ff-bd85-82db7845dc0a",
            "5556d5eb-2c10-4066-95f8-446ca61a5f15",
            "200b5d5e-c08d-40d4-891e-eb4e978d9912",
            "945e4775-7222-463e-9fb1-f36f516b41eb",
            "a0198080-5217-4023-ad58-e6acfc164c57",
            "229319ca-7825-484f-ba5f-647d096ef262",
            "701af9e1-678e-4898-96d7-1c4d02500771",
            "fcf3bbf9-a016-4854-9236-e9a9adad0769",
            "d5a82203-8749-4f86-a7f0-54a784c45383",
            "01d4a2a2-14d5-4835-9fff-66f1d2f7deb1",
            "a0681e3f-be43-433d-ad79-e91273fd1c2f",
            "a6caa1c9-4243-4ee7-bf6b-f8d79df75412",
            "e2f166c6-958f-4a43-a707-bebacae85986",
            "1fccd293-f182-462a-b12c-2cfa42b0a3bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39384,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}